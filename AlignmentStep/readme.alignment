
---------
Usage of ALIGNMENT: 

python /Users/joro/Documents/Phd/UPF/voxforge/myScripts/AlignmentStep/doitOneChunk.py /Users/joro/Documents/Phd/UPF/adaptation_data_soloVoice/nihavent--sarki--aksak--gel_guzelim--faiz_kapanci/ 3 /Users/joro/Documents/Phd/UPF/adaptation_data_soloVoice/ISTANBUL/goekhan/02_Gel_3_zemin


------------
- run forced alignment for whole song (divide in chunks and run for each chunk):
$GITDIR/AlignmentStep/doit.py <wav> <txtTur_withNewLines> <sectionAnno>



- run forced alignment for one chunk only: 

$GITDIR/AlignmentStep/doitOneChunk.py

	The basic function is:
 	RecordingSegmenter.alignOneChunk( pathToHtkModel, path_TO_OUTPUT, lyrics, currPathToAudioFile, isLyricsFromFile)
	
	If you leave lyrics="" and set isLyricsFromFile=1, then it searches for file <currPathToAudioFile>.txtTur with lyrics in turkish script




- run forced alignment for one chunk only with HVite:  
$GITDIR/AlignmentStep/doForceAligment.sh <pathToAudioNoExtension> <LYRICS>  /tmp/phoneme-level.out.mlf

NOTE: For output file phonemeLevel.mlf -o suppresses probability (S), words (W)




----------------------------------------
ANNOTATION:
1) prepare annoatation: 

 convert  turkish to METUBET
for i in `ls *.txtTur`; do a=`basename $i .txtTur` ;   python /Users/joro/Documents/Phd/UPF/voxforge/myScripts/utils/turkishLyrics2METULyrics.py $i ${a}.txt ; done

TODO: script for evaluation

------------------------------------------------------------



TODO: 
3) instead of GMMs see tutorial for DBN (Rolf). first see jeff hintons video.

